// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id                      String      @id @default(cuid())
    name                    String?
    email                   String?     @unique
    emailVerified           DateTime?
    image                   String?
    createdAt               DateTime    @default(now())
    updatedAt               DateTime    @updatedAt
    targetLanguageSetting   String      @default("en-US")
    nativeLanguageSetting   String      @default("en-US")
    goal                    String      @default("Study")
    proficiencyLevelSetting String      @default("Intermediate")
    accounts                Account[]
    sessions                Session[]
    scenes                  Scene[]
    characters              Character[]
}

model Scene {
    id               String @id @default(cuid())
    sceneTitle       String
    sceneDescription String
    botRole          String
    yourRole         String
    sceneImage       String
    userId           String
    user             User   @relation(fields: [userId], references: [id])
}

model Character {
    id          String @id @default(cuid())
    name        String
    description String
    imageUrl    String
    userId      String
    user        User   @relation(fields: [userId], references: [id])
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
